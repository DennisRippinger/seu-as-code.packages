/*
 *    Copyright (C) 2015 QAware GmbH
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id 'com.jfrog.bintray' version '1.2'
}

apply plugin: 'base'
apply plugin: 'maven-publish'

task buildPackage(dependsOn: ['buildPackageDefault',
                              'buildPackageDefaultWin',
                              'buildPackageDefaultMac',
                              'buildPackageDefaultUnix',
                              'buildPackageJdk7',
                              'buildPackageJdk8',
                              'buildPackageJdk9']) {
}

task buildPackageDefault(type: Jar) {
    baseName project.name
    version version
    extension 'jar'
    destinationDir buildDir
    from "files/default"
}

task buildPackageDefaultWin(type: Jar) {
    baseName project.name
    version version
    classifier 'win'
    extension 'jar'
    destinationDir buildDir
    from("files/default") {
        include 'META-INF/**/*'
        include '*.txt'
        include '*.cmd'
        include '*.bat'
    }
}

task buildPackageDefaultMac(type: Jar) {
    baseName project.name
    version version
    classifier 'mac'
    extension 'jar'
    destinationDir buildDir
    from("files/default") {
        exclude '*.cmd'
        exclude '*.bat'
    }
}

task buildPackageDefaultUnix(type: Jar) {
    baseName project.name
    version version
    classifier 'unix'
    extension 'jar'
    destinationDir buildDir
    from("files/default") {
        exclude '*.cmd'
        exclude '*.bat'
    }
}

task buildPackageJdk7(type: Jar) {
    baseName project.name
    version version
    classifier 'jdk7'
    extension 'jar'
    destinationDir buildDir
    from("files/default") {
        exclude 'set-env.*'
    }
    from "files/jdk7"
}

task buildPackageJdk8(type: Jar) {
    baseName project.name
    version version
    classifier 'jdk8'
    extension 'jar'
    destinationDir buildDir
    from("files/default") {
        exclude 'set-env.*'
    }
    from "files/jdk8"
}

task buildPackageJdk9(type: Jar) {
    baseName project.name
    version version
    classifier 'jdk9'
    extension 'jar'
    destinationDir buildDir
    from("files/default") {
        exclude 'set-env.*'
    }
    from "files/jdk9"
}

publishing {
    publications {
        seuacEnvironment(MavenPublication) {
            artifact buildPackageDefault
            artifact buildPackageDefaultWin
            artifact buildPackageDefaultMac
            artifact buildPackageDefaultUnix
            artifact buildPackageJdk7
            artifact buildPackageJdk8
            artifact buildPackageJdk9
        }
    }
    repositories {
        // set the properties via -P to publish to your company repo
        maven {
            url = project.hasProperty('nexusUrl') ? project.nexusUrl : ''
            credentials {
                username = project.hasProperty('nexusUsername') ? project.nexusUsername : ''
                password = project.hasProperty('nexusPassword') ? project.nexusPassword : ''
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['seuacEnvironment']
    publish = true
    dryRun = false
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        labels = ['seuac-environment', 'seu-as-code', 'package']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")

            mavenCentralSync {
                sync = false
            }
        }
    }
}
